Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.

This is case sensitive, for example "Aa" is not considered a palindrome here.

Note:
Assume the length of given string will not exceed 1,010.

Example:

Input:
"abccccdd"

Output:
7

Explanation:
One longest palindrome that can be built is "dccaccd", whose length is 7.

Solution in javascript-

/**
 * @param {string} s
 * @return {number}
 */
var longestPalindrome = function(s) {
   
    var dict = {};
    for(var i=0;i<s.length;i++){
        var ch = s.charAt(i);
        if(dict[ch]){
            dict[ch] = dict[ch]+1;
        }
        else dict[ch]=1;
    }
    var count=0;
    var hasOddValue=false;
    console.log(dict);
    for(var k in dict){
        if(dict[k]%2===0){   // even no of aaaa
            count+=dict[k];
        }
        else {count+=dict[k]-1;}  // ccc add 3-1 =2
        if(dict[k]%2!==0){hasOddValue=true;} // if it has odd 
    }
    if(hasOddValue===true) return count+1; // if it has odd values +1 
    else return count;
};
 Important concepts :- Logic for Odd even count values in hashmap values
