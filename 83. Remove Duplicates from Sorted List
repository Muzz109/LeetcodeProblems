Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3
-------------------------------------------------------------------------------------------------------------Solutions

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var deleteDuplicates = function(head) {
    
    
//     if(!head){
        
//         return head
//     }
//     let curr = head;
//     let prev = new ListNode();
//     let hashtable = {};
//     while(curr!= null){
        
//         if(hashtable[curr.val]){
            
//             prev.next = curr.next
//         }else{
            
//             hashtable[curr.val] = 1
            
//             prev = curr
//         }
//         curr = curr.next
//     }
    
    
//     return head;
    
    let curr = head;
    
    while(curr!== null && curr.next !== null){
        
        if(curr.val === curr.next.val){
            
            curr.next = curr.next.next
            
        }else{
            
            curr = curr.next
        }
    }
    
    return head
};
